name: Python Application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Pull Docker Image & Install Dependencies
      run: |
        docker run -dit --name pydocker --rm -v `pwd`:/repo --workdir="/repo/starter" --entrypoint /bin/bash amancevice/pandas:1.1.1
        docker exec pydocker pip install -r ./requirements.txt
    - name: Lint with flake8
      run: |
        docker exec pydocker python -m flake8 --ignore=E402,W,F .
    - name: Run Unittests
      run: |
        docker exec pydocker python -m pytest -v -m "unittest or unittest_api" .


    # - name: Set up Python 3.8
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: 3.8
    # - name: Add conda to system path
    #   run: |
    #     # $CONDA is an environment variable pointing to the root of the miniconda directory
    #     echo $CONDA/bin >> $GITHUB_PATH
    # - name: Create & Activate venv
    #   run: |
    #     conda create --channel conda-forge --name ci_env --file starter/requirements.txt
    #     conda activate ci_env
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
